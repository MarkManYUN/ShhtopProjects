<Window
    x:Class="HAPCON.HMI.WPF.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:HAPCON.HMI.WPF.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:global="clr-namespace:HAPCON.HMI.WPF.Base"
    xmlns:ins="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:iy="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:lang="clr-namespace:HAPCON.HMI.WPF.Base.Languages"
    xmlns:local="clr-namespace:HAPCON.HMI.WPF"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:template="clr-namespace:HAPCON.HMI.WPF.Templates"
    Title="HTC2100-HMI"
    Width="1920"
    Height="1080"
    Margin="0"
    Padding="0"
    AllowsTransparency="True"
    Background="{DynamicResource PrimaryHueDarkBrush}"
    DataContext="{Binding Source={StaticResource Locator}, Path=MainVM}"
    FontFamily="{StaticResource myfont5}"
    FontSize="18"
    Loaded="Window_Loaded"
    TextElement.Foreground="{DynamicResource MaterialDesignBackground}"
    WindowState="Maximized"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <converter:Bool2VisibilityConverter x:Key="Bool2VisibilityConverter" />
        <converter:Bool2SelectColor x:Key="Bool2SelectColorConverter" />

        <Style x:Key="MenuButtonStyle" TargetType="RadioButton">
            <Setter Property="GroupName" Value="menu" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border
                            Name="back"
                            Background="Transparent"
                            CornerRadius="{Binding Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="back" Property="Background" Value="#66757575" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="back" Property="Background" Value="Red" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NavButtonStyle" TargetType="RadioButton">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="FontSize" Value="25" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border
                            Name="back"
                            Margin="2,0,0,0"
                            Padding="5,0,5,0"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock
                                    Name="icon"
                                    Margin="1,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="../Assets/Fonts/#iconfont"
                                    FontSize="{TemplateBinding FontSize}"
                                    Text="{Binding IconName}" />
                                <ContentControl
                                    Name="content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    Focusable="False"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="back" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                                <Setter TargetName="content" Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                                <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="back" Property="Background" Value="#44000000" />
                                <Setter TargetName="content" Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NavSubButtonStyle" TargetType="RadioButton">
            <Setter Property="Foreground" Value="#AAFFFFFF" />
            <Setter Property="Background" Value="#44000000" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border
                            Name="subback"
                            Margin="0,0,0,0"
                            Padding="5"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock
                                    Margin="1,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="../Assets/Fonts/#iconfont"
                                    FontSize="{TemplateBinding FontSize}"
                                    Text="{Binding IconName}" />
                                <ContentControl
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    FontSize="{TemplateBinding FontSize}" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="subback" Property="Background" Value="#88263238" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="subback" Property="Background" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Storyboard x:Key="SettingStoryboard">
            <DoubleAnimation Duration="0:0:0.2" To="0"
                                         Storyboard.TargetName="tt"
                                         Storyboard.TargetProperty="X" />
        </Storyboard>
        <Storyboard x:Key="CloseSettingStoryboard">
            <DoubleAnimation Duration="0:0:0.1"
                                         Storyboard.TargetName="tt"
                                         Storyboard.TargetProperty="X" />
        </Storyboard>-->
    </Window.Resources>
    <Window.Triggers>
        <!--<EventTrigger RoutedEvent="Button.Click" SourceName="btnSetting">
            <BeginStoryboard Storyboard="{StaticResource SettingStoryboard}" />
        </EventTrigger>-->
        <!--<EventTrigger RoutedEvent="Button.Click" SourceName="btnCloseSetting">
            <BeginStoryboard Storyboard="{StaticResource CloseSettingStoryboard}" />
        </EventTrigger>-->
        <!--<EventTrigger RoutedEvent="Grid.MouseLeftButtonDown" SourceName="gridCloseSetting">
            <BeginStoryboard Storyboard="{StaticResource CloseSettingStoryboard}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseLeftButtonDown" SourceName="borderMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseSettingStoryboard}" />
        </EventTrigger>-->
    </Window.Triggers>
    <Viewbox Stretch="Fill">
        <materialDesign:DialogHost
            Width="1920"
            Height="1080"
            Margin="0"
            DialogTheme="Inherit"
            Identifier="RootDialog"
            SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
            <materialDesign:DrawerHost IsRightDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}" RightDrawerBackground="Transparent">
                <materialDesign:DrawerHost.RightDrawerContent >
                    <StackPanel MinWidth="220"  Height="880" Margin="0,100,0,0" Background="{DynamicResource PrimaryHueLightBrush}">
                        <ToggleButton
                            Margin="10"
                            HorizontalAlignment="Right"
                            IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                            Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />

                        <ItemsControl ItemsSource="{Binding SubMenuList}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <RadioButton
                                        x:Name="alarmInfo"
                                        Command="{Binding DataContext.SubMenuViewCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                        CommandParameter="{Binding TargetView}"
                                        FontSize="25"
                                        IsChecked="{Binding IsSelected}"
                                        Style="{StaticResource MenuButtonStyle}"
                                        Tag="0,0,0,0">
                                        <StackPanel Margin="0,5,0,5" Orientation="Horizontal">
                                            <!--<TextBlock Text="{Binding IconName}" FontFamily="{StaticResource iconfont}"  VerticalAlignment="Center"
                                                   Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" FontSize="24" Margin="10,0,5,0" />-->
                                            <TextBlock
                                                MinWidth="150"
                                                Margin="15,0,10,0"
                                                Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                                Text="{Binding CurrentName}"
                                                TextWrapping="Wrap" />
                                        </StackPanel>
                                    </RadioButton>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </materialDesign:DrawerHost.RightDrawerContent>

                <Grid
                    Name="borderMenu"
                    MouseMove="btn_unfold_MouseMove"
                    MouseRightButtonUp="btn_unfold_MouseUp">
                    <Grid x:Name="gridCloseSetting" Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="150" />
                            <RowDefinition Height="930" />
                        </Grid.RowDefinitions>
                        <WrapPanel Background="{DynamicResource PrimaryHueDarkBrush}" Orientation="Horizontal" Margin="0,5,0,0" >
                            <!--  Logo  -->
                            <Border
                                Margin="0,5,3,0"
                                Background="#44000000" Height="85"
                                BorderBrush="#44FFFFFF"
                                CornerRadius="0">
                                <StackPanel
                                Width="170"
                                Margin="10,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                    <StackPanel
                                    Height="80"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                        <Image
                                        Height="60"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        MouseLeftButtonDown="Image_MouseLeftButtonDown"
                                        Source="{Binding LogoPath}" />
                                        <TextBlock
                                        HorizontalAlignment="Center"
                                        FontSize="15"
                                        Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                        Text="{Binding ProjectName}" />
                                    </StackPanel>
                                </StackPanel>
                            </Border>

                            <!--  状态栏  -->
                            <StackPanel
                                Margin="0,5,3,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                                <Border
                                    Width="205"
                                    Padding="5,0,5,0"
                                    Background="#44000000"
                                    BorderBrush="#44000000"
                                    BorderThickness="2"
                                    CornerRadius="0">
                                    <StackPanel >
                                        <TextBlock
                                            VerticalAlignment="Top"
                                            FontSize="16"
                                            Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                            LineHeight="25">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}[{1}]">
                                                    <Binding Path="(lang:LangProvider.LocalState)" />
                                                    <Binding Path="MainModel.CurrentHostState" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <TextBlock
                                            FontSize="16"
                                            Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                            LineHeight="30">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}[{1}]">
                                                    <Binding Path="(lang:LangProvider.OperateAuthorzation)" />
                                                    <Binding Path="(global:GlobalMonitor.UserName)" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <TextBlock
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Bottom"
                                            FontFamily="../Assets/Fonts/#digital display"
                                            FontSize="22"
                                            Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                            LineHeight="25"
                                            Text="{Binding MainModel.CurrentTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                            <!--  报警条  -->
                            <Border
                                Margin="0,5,1,0"
                                Background="#44000000" Height="85"
                                BorderBrush="#44FFFFFF"
                                CornerRadius="0">
                                <StackPanel Orientation="Horizontal">
                                    <ItemsControl
                                        x:Name="AlarmBar"
                                        Width="850"
                                        AlternationCount="1"
                                        ItemsSource="{Binding AlarmModels}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid 
                                                    TextBlock.FontSize="20"
                                                    TextBlock.Foreground="{Binding FColor}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="80" />
                                                        <ColumnDefinition Width="80" />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="70" />
                                                        <ColumnDefinition Width="210" />
                                                        <ColumnDefinition Width="60" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding PointId, StringFormat=\{0:0000\}}" />
                                                    <TextBlock
                                                        Grid.Column="1"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding ShowName}" />
                                                    <TextBlock
                                                        Grid.Column="2"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding Name}" />
                                                    <TextBlock
                                                        Grid.Column="3"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding State}" />
                                                    <TextBlock
                                                        Grid.Column="4"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding AlarmTime, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}" />
                                                    <TextBlock
                                                        Grid.Column="5"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding Type}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Button
                                        Width="60" Height="85"
                                        Margin="0,0,2,0"
                                        VerticalAlignment="Center"
                                        Background="{DynamicResource PrimaryHueDarkBrush}"
                                        Command="{Binding NoackTopAlarmCommand}"
                                        CommandParameter="{Binding}"
                                        Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                        FontSize="14"
                                        Style="{x:Null}">
                                        <Button.Effect>
                                            <DropShadowEffect
                                                Direction="320"
                                                Opacity="0.5"
                                                ShadowDepth="1"
                                                Color="White" />
                                        </Button.Effect>
                                        <StackPanel>
                                            <materialDesign:PackIcon
                                                Width="35"
                                                Height="35"
                                                Kind="CheckBold" />
                                            <TextBlock HorizontalAlignment="Center" Text="{DynamicResource PointTable_ACK}" />
                                        </StackPanel>
                                    </Button>

                                    <Button
                                        Width="60" Height="85"
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"
                                        Background="{DynamicResource PrimaryHueDarkBrush}"
                                        Command="{Binding NoackTopAlarmCommand}"
                                        CommandParameter="{Binding}"
                                        FontSize="14"
                                        Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                        Style="{x:Null}">
                                        <Button.Effect>
                                            <DropShadowEffect
                                                Direction="320"
                                                Opacity="0.5"
                                                ShadowDepth="1"
                                                Color="White" />
                                        </Button.Effect>
                                        <StackPanel>
                                            <materialDesign:PackIcon
                                                Width="35"
                                                Height="35"
                                                Kind="Mute" />
                                            <TextBlock HorizontalAlignment="Center" Text="{DynamicResource KeySetting_Erasure}" />
                                        </StackPanel>
                                    </Button>

                                </StackPanel>

                                <iy:Interaction.Triggers>
                                    <iy:EventTrigger EventName="MouseLeftButtonDown">
                                        <iy:InvokeCommandAction Command="{Binding DataContext.AllNonACKAlarmCommand, ElementName=btn}" CommandParameter="{Binding}" />
                                    </iy:EventTrigger>
                                </iy:Interaction.Triggers>
                            </Border>

                            <!--  报警数据统计  -->
                            <StackPanel
                                Margin="0,5,5,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Orientation="Vertical">
                                <Border
                                Background="#44000000"
                                BorderBrush="#44FFFFFF"
                                CornerRadius="0">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Button
                                            x:Name="btn"
                                            Height="45"
                                            Background="{DynamicResource PrimaryHueDarkBrush}"
                                            Command="{Binding AllAlarmCommand}"
                                            FontSize="26"
                                            FontWeight="Bold"
                                            Foreground="Red"
                                            Style="{x:Null}"
                                            ToolTip="{DynamicResource Main_AlarmTotalTooltip}">
                                            <Button.Effect>
                                                <DropShadowEffect
                                                    Direction="320"
                                                    Opacity="0.5"
                                                    ShadowDepth="1"
                                                    Color="White" />
                                            </Button.Effect>
                                            <TextBlock Name="button_alarmTotal">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0}{1}">
                                                        <Binding Path="(lang:LangProvider.AlarmTatolToolTip)" />
                                                        <Binding Path="MainModel.AlarmTotal" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </Button>
                                        <WrapPanel Grid.Row="1">
                                            <Button
                                            Width="100"
                                            Height="40" 
                                            Background="{DynamicResource PrimaryHueDarkBrush}"
                                            Command="{Binding EmergencyAlarmCommand}"
                                            FontWeight="Bold"
                                            Foreground="#F500F5"
                                            Style="{x:Null}"
                                            ToolTip="{DynamicResource EmergencyAlarmToolTip}">

                                                <TextBlock FontSize="20" Text="{Binding MainModel.EmergencyCount}" />
                                            </Button>

                                            <Button
                                            Width="100"
                                            Height="40"
                                            Background="{DynamicResource PrimaryHueDarkBrush}"
                                            Command="{Binding AlarmAlarmCommand}"
                                            FontWeight="Bold"
                                            Foreground="#DC0801"
                                            Style="{x:Null}"
                                            ToolTip="{DynamicResource AlarmAlarmToolTip}">

                                                <TextBlock FontSize="18" Text="{Binding MainModel.AlarmCount}" />
                                            </Button>
                                            <Button
                                            Width="100"
                                            Height="40"
                                            Background="{DynamicResource PrimaryHueDarkBrush}"
                                            Command="{Binding WarningAlarmCommand}"
                                            FontWeight="Bold"
                                            Foreground="Orange"
                                            Style="{x:Null}"
                                            ToolTip="{DynamicResource WarningAlarmToolTip}">

                                                <TextBlock FontSize="20" Text="{Binding MainModel.WarningCount}" />
                                            </Button>
                                            <Button
                                            Width="100"
                                            Height="40"
                                            Background="{DynamicResource PrimaryHueDarkBrush}"
                                            Command="{Binding HnitAlarmCommand}"
                                            FontWeight="Bold"
                                            Foreground="#777777"
                                            Style="{x:Null}"
                                            ToolTip="{DynamicResource HnitAlarmToolTip}">

                                                <TextBlock FontSize="20" Text="{Binding MainModel.AttentionCount}" />
                                            </Button>
                                        </WrapPanel>

                                    </Grid>
                                </Border>
                            </StackPanel>

                            <!--  窗口控制按钮  -->
                            <Border
                                Background="#44000000"
                                BorderBrush="#44FFFFFF"
                                CornerRadius="0">
                                <WrapPanel
                                Width="140"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Orientation="Horizontal">
                                    <!--<Button
                                    Name="btnVoice"
                                    Margin="0,10,10,0"
                                    Command="{Binding AlarmNolseCommand}"
                                    FontSize="80"
                                    Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                    ToolTip="{DynamicResource KeySetting_Erasure}">
                                    <materialDesign:PackIcon
                                        Width="30"
                                        Height="30"
                                        Kind="BellOffOutline" />
                                </Button>-->
                                    <!--<Button
                                    Name="btnAllACK"
                                    Margin="0,10,10,0"
                                    Command="{Binding AllNoackAlarmCommand}"
                                    FontSize="80"
                                    Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                    ToolTip="{DynamicResource Main_ACKAllAlarm}">
                                    <materialDesign:PackIcon
                                        Width="30"
                                        Height="30"
                                        Kind="Spellcheck" />
                                </Button>-->
                                    <Button
                                    Name="btnLanguageSwitch"
                                    Margin="0,5,5,0"
                                    Background="{DynamicResource PrimaryHueDarkBrush}"
                                    Command="{Binding LanguageSwitchCommand}"
                                    Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                    Style="{x:Null}"
                                    ToolTip="{DynamicResource Main_LanguageSwitchTooltip}">
                                        <Button.Effect>
                                            <DropShadowEffect
                                            Direction="320"
                                            Opacity="0.5"
                                            ShadowDepth="1"
                                            Color="White" />
                                        </Button.Effect>
                                        <materialDesign:PackIcon
                                        Width="35"
                                        Height="35"
                                        Kind="Translate" />
                                    </Button>

                                    <Button
                                    Name="recordsearch"
                                    Margin="0,5,5,0"
                                    Background="{DynamicResource PrimaryHueDarkBrush}"
                                    Command="{Binding RecordSearchCommand}"
                                    Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                    Style="{x:Null}"
                                    ToolTip="{DynamicResource RecordSearch_Print}">
                                        <Button.Effect>
                                            <DropShadowEffect
                                            Direction="320"
                                            Opacity="0.5"
                                            ShadowDepth="1"
                                            Color="White" />
                                        </Button.Effect>
                                        <materialDesign:PackIcon
                                        Width="35"
                                        Height="35"
                                        Kind="Printer" />
                                    </Button>
                                    <Button
                                    Margin="0,5,5,0"
                                    Background="{DynamicResource PrimaryHueDarkBrush}"
                                    Command="{Binding ThemeSwitchCommand}"
                                    FontSize="80"
                                    Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                    Style="{x:Null}"
                                    ToolTip="{DynamicResource Main_Dark}">
                                        <Button.Effect>
                                            <DropShadowEffect
                                            Direction="320"
                                            Opacity="0.5"
                                            ShadowDepth="1"
                                            Color="White" />
                                        </Button.Effect>
                                        <materialDesign:PackIcon
                                        Width="35"
                                        Height="35"
                                        Kind="{Binding ThemeIConName}" />
                                    </Button>
                                    <Button
                                    Margin="0,4,5,0"
                                    Background="{DynamicResource PrimaryHueDarkBrush}"
                                    Command="{Binding PowerManagementCommand}"
                                    FontSize="80"
                                    Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                    Style="{x:Null}"
                                    ToolTip="{DynamicResource SystemManagement}">
                                        <Button.Effect>
                                            <DropShadowEffect
                                            Direction="320"
                                            Opacity="0.5"
                                            ShadowDepth="1"
                                            Color="White" />
                                        </Button.Effect>
                                        <materialDesign:PackIcon
                                        Width="35"
                                        Height="35"
                                        Kind="Power" />
                                    </Button>
                                    <Button
                                    Margin="0,4,5,0"
                                    Background="{DynamicResource PrimaryHueDarkBrush}"
                                    Click="Button_Click"
                                    FontSize="80"
                                    Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                    Style="{x:Null}"
                                    ToolTip="{DynamicResource Main_Navigation}">
                                        <Button.Effect>
                                            <DropShadowEffect
                                            Direction="320"
                                            Opacity="0.5"
                                            ShadowDepth="1"
                                            Color="{DynamicResource WhiteColor}" />
                                        </Button.Effect>
                                        <!--  Name="btnSetting"  -->
                                        <materialDesign:PackIcon
                                        Width="35"
                                        Height="35"
                                        Kind="Navigation" />
                                    </Button>

                                    <!--<Button
                                    Margin="0,10,10,0"
                                    Command="{Binding ScreenshotCommand}"
                                    FontSize="80"
                                    Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                    ToolTip="{DynamicResource Main_ScreenShot}">
                                    <materialDesign:PackIcon
                                        Width="30"
                                        Height="30"
                                        Kind="MonitorScreenshot" />
                                </Button>-->
                                </WrapPanel>
                            </Border>
                            <!--  主菜单按钮  -->
                            <Border
                                Margin="10,0,0,0"
                                Background="#44000000"
                                BorderBrush="#22FFFFFF"
                                BorderThickness="0,7,0,0">
                                <StackPanel
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <!--<ScrollViewer  Width="1870"  VerticalScrollBarVisibility="Hidden" CanContentScroll="True"
                                                   HorizontalScrollBarVisibility="Hidden">
                                    </ScrollViewer>-->
                                    <ListView
                                        x:Name="ListView1"
                                        Width="1855"
                                        ItemsSource="{Binding TopMenuList}"
                                        ManipulationBoundaryFeedback="SCManipulationBoundaryFeedback"
                                        ScrollViewer.CanContentScroll="True">
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListViewItem}">
                                                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                                    <ContentPresenter />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                                    <ContentPresenter />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <!--<RadioButton
                                                    Height="46"
                                                    Margin="2"
                                                    Padding="1,0,0,0"
                                                    Command="{Binding DataContext.NavigationPageCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                                    CommandParameter="{Binding TargetView}"
                                                    Content="{Binding CurrentName}"
                                                    IsChecked="{Binding IsSelected}"
                                                    Style="{StaticResource NavButtonStyle}" />-->

                                                <Button
                                                    Height="46" Width="150"
                                                    Margin="2"
                                                    Padding="5,0,5,0"
                                                    Background="{Binding IsSelected, Converter={StaticResource Bool2SelectColorConverter}}"
                                                    Command="{Binding DataContext.NavigationPageCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                                    CommandParameter="{Binding TargetView}"
                                                    FontSize="25">
                                                    <StackPanel Name="PanelA" Orientation="Horizontal">
                                                        <TextBlock
                                                            Name="icon"
                                                            Margin="1,0"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            FontFamily="../Assets/Fonts/#iconfont"
                                                            Text="{Binding IconName}" />
                                                        <TextBlock Text="{Binding CurrentName}" />
                                                    </StackPanel>
                                                </Button>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ListView>
                                    <!--<StackPanel Orientation="Horizontal">
                                        <Button Content="MimicPreviewView" Command="{Binding NavigationPageCommand}"  CommandParameter="MimicPreviewView"/>
                                        <Button Content="MimicView" Command="{Binding NavigationPageCommand}"  CommandParameter="MimicView"/>
                                        <Button Content="AlarmView" Command="{Binding NavigationPageCommand}"  CommandParameter="AlarmView"/>
                                        <Button Content="PointView" Command="{Binding NavigationPageCommand}"  CommandParameter="PointView"/>
                                        <Button Content="PointView" Command="{Binding NavigationPageCommand}"  CommandParameter="PointView"/>
                                    </StackPanel>-->
                                    <ToggleButton
                                        x:Name="MenuToggleButton"
                                        Width="40"
                                        Height="50"
                                        Margin="0,0,10,0"
                                        HorizontalAlignment="Right"
                                        AutomationProperties.Name="HamburgerToggleButton"
                                        Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                        IsChecked="False"
                                        Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                        />
                                </StackPanel>
                                <!--<StackPanel   Orientation="Vertical" Width="1920">
                                    <ItemsControl
                                        x:Name="ListView1"
                                        ItemsSource="{Binding TopMenuList}"
                                        ManipulationBoundaryFeedback="SCManipulationBoundaryFeedback"
                                        ScrollViewer.CanContentScroll="True">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                -->
                                <!--<RadioButton
                                                    Command="{Binding DataContext.NavigationPageCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                                    CommandParameter="{Binding TargetView}"
                                                    Content="{Binding CurrentName}"
                                                    IsChecked="{Binding IsSelected}"
                                                    Style="{StaticResource NavButtonStyle}" />-->
                                <!--
                                                <RadioButton Style="{StaticResource defaultRadioStyle}"
                                                    IsChecked="{Binding IsSelected}" Padding="10,0,10,0"
                                                    Command="{Binding DataContext.NavigationPageCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                                    CommandParameter="{Binding TargetView}">
                                                    <StackPanel Orientation="Horizontal"  >
                                                        <TextBlock Text="{Binding IconName}" FontSize="28" FontFamily="../Assets/Fonts/#iconfont" VerticalAlignment="Center"/>
                                                        <TextBlock Text="{Binding CurrentName}" FontSize="28" Margin="10 0 0 0" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </RadioButton>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>


                                </StackPanel>-->
                            </Border>

                            <!--  子菜单按钮  -->
                            <!--<Border BorderBrush="#44FFFFFF" Background="#44000000" Width="1900" Height="85" BorderThickness="1" CornerRadius="10" Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Center">
                            <ItemsControl ItemsSource="{Binding SubMenuList}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal" Margin="10,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center" Background="Transparent" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="#44FFFFFF" BorderThickness="2,2,2,2 " Margin="0" CornerRadius="8">
                                            <RadioButton Content="{Binding CurrentName}" Style="{StaticResource NavSubButtonStyle}"
                                                     x:Name="alarmInfo"
                                         IsChecked="{Binding IsSelected}"
                                         Command="{Binding DataContext.OpenViewCommand,RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}}"
                                         CommandParameter="{Binding TargetView}" />
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Border>-->

                        </WrapPanel>

                        <!--<ContentControl
                            Name="ContentPanel"
                            Grid.Row="1"
                            Background="{DynamicResource PrimaryHueMidBrush}"
                            Content="{Binding MainModel.MainContent}" />-->
                        <!--<ListBox Grid.Row="1" ItemsSource="{Binding MainModel.MainContents}"
                                        Background="Red">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Type}"/>
                                        <TextBlock Text="{Binding IsDisplay}"/>
                                        <ContentControl
                                        Content="{Binding Content}"
                                        Visibility="{Binding IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>-->
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[0].Content}"
                            Visibility="{Binding MainModel.MainContents[0].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[1].Content}"
                            Visibility="{Binding MainModel.MainContents[1].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[2].Content}"
                            Visibility="{Binding MainModel.MainContents[2].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[3].Content}"
                            Visibility="{Binding MainModel.MainContents[3].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[4].Content}"
                            Visibility="{Binding MainModel.MainContents[4].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[5].Content}"
                            Visibility="{Binding MainModel.MainContents[5].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[6].Content}"
                            Visibility="{Binding MainModel.MainContents[6].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[7].Content}"
                            Visibility="{Binding MainModel.MainContents[7].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[8].Content}"
                            Visibility="{Binding MainModel.MainContents[8].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                        <ContentControl
                            Grid.Row="1"
                            Content="{Binding MainModel.MainContents[9].Content}"
                            Visibility="{Binding MainModel.MainContents[9].IsDisplay, Converter={StaticResource Bool2VisibilityConverter}}" />
                    </Grid>
                    <!--  二级导航按钮  -->
                    <!--<Grid  Margin="0,160,0,0" x:Name="subMenuNavGrid" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Button x:Name="btn_unfold" MouseRightButtonDown="btn_unfold_MouseDown"
                            Foreground="#88FFFFFF" FontSize="30" Grid.Row="0" Background="#66000000"
                             FontFamily="../Assets/Fonts/#iconfont" Command="{Binding UnfoldCommand}">
                        <Button.Style>
                            <Style  TargetType="Button">
                                <Setter Property="Content" Value="&#xe60f;" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSubMenuUnfold}" Value="False">
                                        <Setter Property = "Content" Value="&#xe62f;" />
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#44000000" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    -->
                    <!--<Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="1x" AutoReverse="False">
                                        <DoubleAnimation  Storyboard.TargetName="subMenuBorder"
                                                          Storyboard.TargetProperty="Height"
                                                          From="0" To="800" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>-->
                    <!--
                    </Button>
                    <Border Width="auto" x:Name="subMenuBorder" Visibility="{Binding IsSubMenuUnfold,Converter={StaticResource Bool2VisibilityConverter}}"
                            Grid.Row="1" Background="#44000000" CornerRadius="10" Grid.Column="1" BorderBrush="White" BorderThickness="0">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="1" ShadowDepth="1" Color="#000000" />
                        </Border.Effect>

                        <ItemsControl ItemsSource="{Binding SubMenuList}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="1" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <RadioButton CommandParameter="{Binding TargetView}" Command="{Binding DataContext.OpenViewCommand,RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}}"
                                     IsChecked="{Binding IsSelected}" Tag="0,0,0,0" x:Name="alarmInfo"
                                     Style="{StaticResource MenuButtonStyle}" FontSize="22">
                                        <StackPanel Orientation="Horizontal"  Margin="0,5,0,5">
                                            <TextBlock Text="{Binding IconName}" FontFamily="{StaticResource iconfont}"  VerticalAlignment="Center" Foreground="White" FontSize="24" Margin="10,0,5,0" />
                                            <TextBlock Text="{Binding CurrentName}" Foreground="White" Margin="0,0,10,0" />
                                        </StackPanel>
                                    </RadioButton>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>
                </Grid>-->

                    <!--  抽屉侧滑栏  -->
                    <!--<Border  Background="{DynamicResource  PrimaryHueLightBrush}"  Width="240" HorizontalAlignment="Right" CornerRadius="0,5,5,0">
                        <Border.Effect>
                            <DropShadowEffect Color="{DynamicResource  MaterialDesignShadow}" ShadowDepth="0" BlurRadius="5" Opacity="0.8" Direction="180" />
                        </Border.Effect>
                        <Border.RenderTransform>
                            <TranslateTransform X="250" x:Name="tt" />
                        </Border.RenderTransform>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Button Width="230" Height="40" Margin="5,0" VerticalAlignment="Top" Name="btnCloseSetting">
                                <materialDesign:PackIcon Kind="ArrowRight" Width="30" Height="40" />
                            </Button>

                            <Grid Grid.Row="1" Margin="5,0">
                                <Grid.Resources>
                                    <Style TargetType="Button" x:Key="menuBtn">
                                        <Setter Property="FontSize" Value="20" />
                                        <Setter Property="Margin" Value="20" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="100" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                    -->
                    <!--<Button Content="系统图编辑"  FontSize="22" Margin="3" Height="40" Command="{Binding OpenSystemEditCommand}" />-->
                    <!--
                                    <Button FontSize="22" Margin="3" Height="40" Command="{Binding OpenPointManagementCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="PointOfSale" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource PointManagement_PointMangement}" Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button   FontSize="22" Margin="3" Height="40" Command="{Binding OpenMimicManagementCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ChartArc" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_MimicEdit}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button   FontSize="22" Margin="3" Height="40" Command="{Binding OpenNodeManagementCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Devices" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource DeviceManagement_DeviceManagement}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button   FontSize="22" Margin="3" Height="40" Command="{Binding OpenAlarmGroupManagementCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Group" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource AlarmGroupManagment_AlarmGroupManagement}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button  FontSize="22" Margin="3" Height="40"  Command="{Binding OpenAlarmExitGroupEditCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="HomeGroup" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_AlarmExitGroup}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button   FontSize="22" Margin="3" Height="40" Command="{Binding OpenFunctionParameterEditCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Function" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_AlarmParams}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>

                                    <Button   FontSize="22" Margin="3" Height="40" Command="{Binding AllNoackAlarmCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="AlarmTick" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_ACKAllAlarm}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                    -->
                    <!--<Button  FontSize="22" Margin="3" Height="40"  Command="{Binding OpenAlarmGroupLocationManagementCommand}" HorizontalContentAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="MessageGroup" Height="25" Width="25" />
                                        <TextBlock Text="地址报警组"  Margin="10,0,0,0" />
                                    </StackPanel>
                                </Button>-->
                    <!--
                                    <Button   FontSize="22" Margin="3" Height="40" Command="{Binding OpenEditNodeIDCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Numbers" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_MacEditID}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button   FontSize="22" Margin="3" Height="40" Command="{Binding OpenDigitalSimulationCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="CableData" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_DataSimulate}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button  FontSize="22" Margin="3" Height="40"  Command="{Binding UserListEditCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="TableAccount" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_CustomList}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button  FontSize="22" Margin="3" Height="40" Command="{Binding EngineerAlarmSystemCommmand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ManMan" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_EngineerSafetySystem}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button  FontSize="22" Margin="3" Height="40"  Command="{Binding RecordSearchCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Search" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_SearchRecord}" Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button  FontSize="22" Margin="3" Height="40"  Command="{Binding  SettingHotKeyCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Keyboard" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_SettingKey}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button   FontSize="22" Margin="3" Height="40"  Command="{Binding  SettingMenuCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Menu" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_EditMenu}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button  FontSize="22" Margin="3" Height="40"  Command="{Binding  SettingThemeCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Palette" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_ThemeSetting}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                    <Button FontSize="22" Margin="3" Height="40"  Command="{Binding ExceptionLogCommand}" Name="btnLog" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Blog" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_ExcptionLog}"  Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>

                    -->
                    <!--<Button FontSize="20" Name="PaletteSelector" Command="{Binding PaletterSelectorComand}" Margin="5" HorizontalContentAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Blog" Height="25" Width="25" />
                                        <TextBlock Text="调色板选择器"  Margin="10,0,0,0" />
                                    </StackPanel>
                                </Button>
                                <Button FontSize="20" Name="ColorTool" Command="{Binding ColorToolComand}" Margin="5" HorizontalContentAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Blog" Height="25" Width="25" />
                                        <TextBlock Text="调色板"  Margin="10,0,0,0" />
                                    </StackPanel>
                                </Button>-->
                    <!--<Button Content="历史趋势"  FontSize="22" Margin="3" Height="40"  Command="{Binding  HistoricalTrendCommand}" />-->
                    <!--
                                    <Button   FontSize="22" Margin="3" Height="40"  Command="{Binding OpenClearPasswordPermissionCommand}" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Password" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_ClearPasswordAuth}" Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                    -->
                    <!--<StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Center"  Orientation="Horizontal" Margin="8" TextBlock.FontSize="15">
                                <ToggleButton  Margin="8 0 16 0" IsChecked="{Binding IsDarkTheme}"  Background="{DynamicResource PrimaryHueLightForegroundBrush}">
                                    <materialDesign:PackIcon Kind="ThemeLightDark" />
                                </ToggleButton>
                            </StackPanel>-->
                    <!--<Button Command="{Binding ThemeSwitchCommand}" Width="50" Height="40" Background="Transparent"
                                    VerticalAlignment="Bottom" HorizontalAlignment="Center">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="{Binding ThemeIConName}" Width="20" Height="20" />
                                </StackPanel>
                            </Button>-->
                    <!--
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,50" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Button  Click="btnClose_Click">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ExitRun" Height="25" Width="25" />
                                            <TextBlock Text="{DynamicResource Main_ExitProgram}" FontSize="18" Margin="10,0,0,0" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>-->

                    <materialDesign:Snackbar
                        x:Name="MainSnackbar"
                        Grid.Row="0"
                        Margin="0,0,0,100"
                        Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                        MessageQueue="{materialDesign:MessageQueue}" />
                </Grid>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
    </Viewbox>
</Window>